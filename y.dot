// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "scalpa.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="PROGRAM"]
  0 -> 2 [style=dashed label="program"]
  1 [label="State 1\n\l  1 program: PROGRAM . IDENT vardecllist fundecllist\l"]
  1 -> 3 [style=solid label="IDENT"]
  2 [label="State 2\n\l  0 $accept: program . $end\l"]
  2 -> 4 [style=solid label="$end"]
  3 [label="State 3\n\l  1 program: PROGRAM IDENT . vardecllist fundecllist\l"]
  3 -> 5 [style=solid label="VAR"]
  3 -> 6 [style=dashed label="vardecllist"]
  3 -> 7 [style=dashed label="varsdecl"]
  3 -> "3R2" [style=solid]
 "3R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  0 $accept: program $end .\l"]
  4 -> "4R0" [style=solid]
 "4R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  5 [label="State 5\n\l  5 varsdecl: VAR . identlist ':' typename\l"]
  5 -> 8 [style=solid label="IDENT"]
  5 -> 9 [style=dashed label="identlist"]
  6 [label="State 6\n\l  1 program: PROGRAM IDENT vardecllist . fundecllist\l"]
  6 -> 10 [style=solid label="FUNCTION"]
  6 -> 11 [style=dashed label="fundecllist"]
  6 -> 12 [style=dashed label="fundecl"]
  6 -> "6R17" [style=solid]
 "6R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  3 vardecllist: varsdecl .\l  4            | varsdecl . ';' vardecllist\l"]
  7 -> 13 [style=solid label="';'"]
  7 -> "7R3d" [label="[';']", style=solid]
 "7R3d" [label="R3", fillcolor=5, shape=diamond, style=filled]
  7 -> "7R3" [style=solid]
 "7R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  6 identlist: IDENT .\l  7          | IDENT . ',' identlist\l"]
  8 -> 14 [style=solid label="','"]
  8 -> "8R6" [style=solid]
 "8R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  5 varsdecl: VAR identlist . ':' typename\l"]
  9 -> 15 [style=solid label="':'"]
  10 [label="State 10\n\l 19 fundecl: FUNCTION . IDENT '(' parlist ')' ':' atomictype vardecllist\l"]
  10 -> 16 [style=solid label="IDENT"]
  11 [label="State 11\n\l  1 program: PROGRAM IDENT vardecllist fundecllist .\l"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 18 fundecllist: fundecl . ';' fundecllist\l"]
  12 -> 17 [style=solid label="';'"]
  13 [label="State 13\n\l  4 vardecllist: varsdecl ';' . vardecllist\l"]
  13 -> 5 [style=solid label="VAR"]
  13 -> 18 [style=dashed label="vardecllist"]
  13 -> 7 [style=dashed label="varsdecl"]
  13 -> "13R2" [style=solid]
 "13R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  7 identlist: IDENT ',' . identlist\l"]
  14 -> 8 [style=solid label="IDENT"]
  14 -> 19 [style=dashed label="identlist"]
  15 [label="State 15\n\l  5 varsdecl: VAR identlist ':' . typename\l"]
  15 -> 20 [style=solid label="UNIT_TYPE"]
  15 -> 21 [style=solid label="BOOL_TYPE"]
  15 -> 22 [style=solid label="INT_TYPE"]
  15 -> 23 [style=solid label="ARRAY"]
  15 -> 24 [style=dashed label="typename"]
  15 -> 25 [style=dashed label="atomictype"]
  15 -> 26 [style=dashed label="arraytype"]
  16 [label="State 16\n\l 19 fundecl: FUNCTION IDENT . '(' parlist ')' ':' atomictype vardecllist\l"]
  16 -> 27 [style=solid label="'('"]
  17 [label="State 17\n\l 18 fundecllist: fundecl ';' . fundecllist\l"]
  17 -> 10 [style=solid label="FUNCTION"]
  17 -> 28 [style=dashed label="fundecllist"]
  17 -> 12 [style=dashed label="fundecl"]
  17 -> "17R17" [style=solid]
 "17R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  4 vardecllist: varsdecl ';' vardecllist .\l"]
  18 -> "18R4" [style=solid]
 "18R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  7 identlist: IDENT ',' identlist .\l"]
  19 -> "19R7" [style=solid]
 "19R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 10 atomictype: UNIT_TYPE .\l"]
  20 -> "20R10" [style=solid]
 "20R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 11 atomictype: BOOL_TYPE .\l"]
  21 -> "21R11" [style=solid]
 "21R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 12 atomictype: INT_TYPE .\l"]
  22 -> "22R12" [style=solid]
 "22R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l 13 arraytype: ARRAY . '[' rangelist ']' OF atomictype\l"]
  23 -> 29 [style=solid label="'['"]
  24 [label="State 24\n\l  5 varsdecl: VAR identlist ':' typename .\l"]
  24 -> "24R5" [style=solid]
 "24R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l  8 typename: atomictype .\l"]
  25 -> "25R8" [style=solid]
 "25R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l  9 typename: arraytype .\l"]
  26 -> "26R9" [style=solid]
 "26R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 19 fundecl: FUNCTION IDENT '(' . parlist ')' ':' atomictype vardecllist\l"]
  27 -> 30 [style=solid label="IDENT"]
  27 -> 31 [style=solid label="REF"]
  27 -> 32 [style=dashed label="parlist"]
  27 -> 33 [style=dashed label="par"]
  27 -> "27R20" [style=solid]
 "27R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 18 fundecllist: fundecl ';' fundecllist .\l"]
  28 -> "28R18" [style=solid]
 "28R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l 13 arraytype: ARRAY '[' . rangelist ']' OF atomictype\l"]
  29 -> 34 [style=solid label="CTE"]
  29 -> 35 [style=solid label="IDENT"]
  29 -> 36 [style=solid label="'('"]
  29 -> 37 [style=solid label="OP_MINUS"]
  29 -> 38 [style=solid label="OPU_NOT"]
  29 -> 39 [style=dashed label="rangelist"]
  29 -> 40 [style=dashed label="integer"]
  29 -> 41 [style=dashed label="expr"]
  29 -> 42 [style=dashed label="opu"]
  30 [label="State 30\n\l 23 par: IDENT . ':' typename\l"]
  30 -> 43 [style=solid label="':'"]
  31 [label="State 31\n\l 24 par: REF . IDENT ':' typename\l"]
  31 -> 44 [style=solid label="IDENT"]
  32 [label="State 32\n\l 19 fundecl: FUNCTION IDENT '(' parlist . ')' ':' atomictype vardecllist\l"]
  32 -> 45 [style=solid label="')'"]
  33 [label="State 33\n\l 21 parlist: par .\l 22        | par . ',' parlist\l"]
  33 -> 46 [style=solid label="','"]
  33 -> "33R21" [style=solid]
 "33R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 27 expr: CTE .\l"]
  34 -> "34R27" [style=solid]
 "34R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 31 expr: IDENT . '(' exprlist ')'\l 32     | IDENT . '(' ')'\l 33     | IDENT . '[' exprlist ']'\l 34     | IDENT .\l"]
  35 -> 47 [style=solid label="'('"]
  35 -> 48 [style=solid label="'['"]
  35 -> "35R34" [style=solid]
 "35R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 28 expr: '(' . expr ')'\l"]
  36 -> 34 [style=solid label="CTE"]
  36 -> 35 [style=solid label="IDENT"]
  36 -> 36 [style=solid label="'('"]
  36 -> 37 [style=solid label="OP_MINUS"]
  36 -> 38 [style=solid label="OPU_NOT"]
  36 -> 49 [style=dashed label="expr"]
  36 -> 42 [style=dashed label="opu"]
  37 [label="State 37\n\l 49 opu: OP_MINUS .\l"]
  37 -> "37R49" [style=solid]
 "37R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 50 opu: OPU_NOT .\l"]
  38 -> "38R50" [style=solid]
 "38R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 13 arraytype: ARRAY '[' rangelist . ']' OF atomictype\l"]
  39 -> 50 [style=solid label="']'"]
  40 [label="State 40\n\l 14 rangelist: integer . RANGELIST_SEPARATOR integer\l 15          | integer . RANGELIST_SEPARATOR integer ',' rangelist\l"]
  40 -> 51 [style=solid label="RANGELIST_SEPARATOR"]
  41 [label="State 41\n\l 16 integer: expr .\l 29 expr: expr . opb expr\l"]
  41 -> 52 [style=solid label="OP_MINUS"]
  41 -> 53 [style=solid label="OPB_POW"]
  41 -> 54 [style=solid label="OPB_STAR"]
  41 -> 55 [style=solid label="OPB_DIVIDE"]
  41 -> 56 [style=solid label="OPB_AND"]
  41 -> 57 [style=solid label="OPB_PLUS"]
  41 -> 58 [style=solid label="OPB_OR"]
  41 -> 59 [style=solid label="OPB_XOR"]
  41 -> 60 [style=solid label="OPB_L_EQ"]
  41 -> 61 [style=solid label="OPB_L"]
  41 -> 62 [style=solid label="OPB_G_EQ"]
  41 -> 63 [style=solid label="OPB_G"]
  41 -> 64 [style=solid label="OPB_EQ"]
  41 -> 65 [style=solid label="OPB_DIFF"]
  41 -> 66 [style=dashed label="opb"]
  41 -> "41R16" [style=solid]
 "41R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 30 expr: opu . expr\l"]
  42 -> 34 [style=solid label="CTE"]
  42 -> 35 [style=solid label="IDENT"]
  42 -> 36 [style=solid label="'('"]
  42 -> 37 [style=solid label="OP_MINUS"]
  42 -> 38 [style=solid label="OPU_NOT"]
  42 -> 67 [style=dashed label="expr"]
  42 -> 42 [style=dashed label="opu"]
  43 [label="State 43\n\l 23 par: IDENT ':' . typename\l"]
  43 -> 20 [style=solid label="UNIT_TYPE"]
  43 -> 21 [style=solid label="BOOL_TYPE"]
  43 -> 22 [style=solid label="INT_TYPE"]
  43 -> 23 [style=solid label="ARRAY"]
  43 -> 68 [style=dashed label="typename"]
  43 -> 25 [style=dashed label="atomictype"]
  43 -> 26 [style=dashed label="arraytype"]
  44 [label="State 44\n\l 24 par: REF IDENT . ':' typename\l"]
  44 -> 69 [style=solid label="':'"]
  45 [label="State 45\n\l 19 fundecl: FUNCTION IDENT '(' parlist ')' . ':' atomictype vardecllist\l"]
  45 -> 70 [style=solid label="':'"]
  46 [label="State 46\n\l 22 parlist: par ',' . parlist\l"]
  46 -> 30 [style=solid label="IDENT"]
  46 -> 31 [style=solid label="REF"]
  46 -> 71 [style=dashed label="parlist"]
  46 -> 33 [style=dashed label="par"]
  46 -> "46R20" [style=solid]
 "46R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 31 expr: IDENT '(' . exprlist ')'\l 32     | IDENT '(' . ')'\l"]
  47 -> 34 [style=solid label="CTE"]
  47 -> 35 [style=solid label="IDENT"]
  47 -> 36 [style=solid label="'('"]
  47 -> 72 [style=solid label="')'"]
  47 -> 37 [style=solid label="OP_MINUS"]
  47 -> 38 [style=solid label="OPU_NOT"]
  47 -> 73 [style=dashed label="exprlist"]
  47 -> 74 [style=dashed label="expr"]
  47 -> 42 [style=dashed label="opu"]
  48 [label="State 48\n\l 33 expr: IDENT '[' . exprlist ']'\l"]
  48 -> 34 [style=solid label="CTE"]
  48 -> 35 [style=solid label="IDENT"]
  48 -> 36 [style=solid label="'('"]
  48 -> 37 [style=solid label="OP_MINUS"]
  48 -> 38 [style=solid label="OPU_NOT"]
  48 -> 75 [style=dashed label="exprlist"]
  48 -> 74 [style=dashed label="expr"]
  48 -> 42 [style=dashed label="opu"]
  49 [label="State 49\n\l 28 expr: '(' expr . ')'\l 29     | expr . opb expr\l"]
  49 -> 76 [style=solid label="')'"]
  49 -> 52 [style=solid label="OP_MINUS"]
  49 -> 53 [style=solid label="OPB_POW"]
  49 -> 54 [style=solid label="OPB_STAR"]
  49 -> 55 [style=solid label="OPB_DIVIDE"]
  49 -> 56 [style=solid label="OPB_AND"]
  49 -> 57 [style=solid label="OPB_PLUS"]
  49 -> 58 [style=solid label="OPB_OR"]
  49 -> 59 [style=solid label="OPB_XOR"]
  49 -> 60 [style=solid label="OPB_L_EQ"]
  49 -> 61 [style=solid label="OPB_L"]
  49 -> 62 [style=solid label="OPB_G_EQ"]
  49 -> 63 [style=solid label="OPB_G"]
  49 -> 64 [style=solid label="OPB_EQ"]
  49 -> 65 [style=solid label="OPB_DIFF"]
  49 -> 66 [style=dashed label="opb"]
  50 [label="State 50\n\l 13 arraytype: ARRAY '[' rangelist ']' . OF atomictype\l"]
  50 -> 77 [style=solid label="OF"]
  51 [label="State 51\n\l 14 rangelist: integer RANGELIST_SEPARATOR . integer\l 15          | integer RANGELIST_SEPARATOR . integer ',' rangelist\l"]
  51 -> 34 [style=solid label="CTE"]
  51 -> 35 [style=solid label="IDENT"]
  51 -> 36 [style=solid label="'('"]
  51 -> 37 [style=solid label="OP_MINUS"]
  51 -> 38 [style=solid label="OPU_NOT"]
  51 -> 78 [style=dashed label="integer"]
  51 -> 41 [style=dashed label="expr"]
  51 -> 42 [style=dashed label="opu"]
  52 [label="State 52\n\l 36 opb: OP_MINUS .\l"]
  52 -> "52R36" [style=solid]
 "52R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 39 opb: OPB_POW .\l"]
  53 -> "53R39" [style=solid]
 "53R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 37 opb: OPB_STAR .\l"]
  54 -> "54R37" [style=solid]
 "54R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 38 opb: OPB_DIVIDE .\l"]
  55 -> "55R38" [style=solid]
 "55R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 46 opb: OPB_AND .\l"]
  56 -> "56R46" [style=solid]
 "56R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 35 opb: OPB_PLUS .\l"]
  57 -> "57R35" [style=solid]
 "57R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l 47 opb: OPB_OR .\l"]
  58 -> "58R47" [style=solid]
 "58R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 48 opb: OPB_XOR .\l"]
  59 -> "59R48" [style=solid]
 "59R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 41 opb: OPB_L_EQ .\l"]
  60 -> "60R41" [style=solid]
 "60R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 40 opb: OPB_L .\l"]
  61 -> "61R40" [style=solid]
 "61R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 43 opb: OPB_G_EQ .\l"]
  62 -> "62R43" [style=solid]
 "62R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 42 opb: OPB_G .\l"]
  63 -> "63R42" [style=solid]
 "63R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 44 opb: OPB_EQ .\l"]
  64 -> "64R44" [style=solid]
 "64R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 45 opb: OPB_DIFF .\l"]
  65 -> "65R45" [style=solid]
 "65R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 29 expr: expr opb . expr\l"]
  66 -> 34 [style=solid label="CTE"]
  66 -> 35 [style=solid label="IDENT"]
  66 -> 36 [style=solid label="'('"]
  66 -> 37 [style=solid label="OP_MINUS"]
  66 -> 38 [style=solid label="OPU_NOT"]
  66 -> 79 [style=dashed label="expr"]
  66 -> 42 [style=dashed label="opu"]
  67 [label="State 67\n\l 29 expr: expr . opb expr\l 30     | opu expr .\l"]
  67 -> 52 [style=solid label="OP_MINUS"]
  67 -> 53 [style=solid label="OPB_POW"]
  67 -> 54 [style=solid label="OPB_STAR"]
  67 -> 55 [style=solid label="OPB_DIVIDE"]
  67 -> 56 [style=solid label="OPB_AND"]
  67 -> 57 [style=solid label="OPB_PLUS"]
  67 -> 58 [style=solid label="OPB_OR"]
  67 -> 59 [style=solid label="OPB_XOR"]
  67 -> 60 [style=solid label="OPB_L_EQ"]
  67 -> 61 [style=solid label="OPB_L"]
  67 -> 62 [style=solid label="OPB_G_EQ"]
  67 -> 63 [style=solid label="OPB_G"]
  67 -> 64 [style=solid label="OPB_EQ"]
  67 -> 65 [style=solid label="OPB_DIFF"]
  67 -> 66 [style=dashed label="opb"]
  67 -> "67R30" [style=solid]
 "67R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 23 par: IDENT ':' typename .\l"]
  68 -> "68R23" [style=solid]
 "68R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 24 par: REF IDENT ':' . typename\l"]
  69 -> 20 [style=solid label="UNIT_TYPE"]
  69 -> 21 [style=solid label="BOOL_TYPE"]
  69 -> 22 [style=solid label="INT_TYPE"]
  69 -> 23 [style=solid label="ARRAY"]
  69 -> 80 [style=dashed label="typename"]
  69 -> 25 [style=dashed label="atomictype"]
  69 -> 26 [style=dashed label="arraytype"]
  70 [label="State 70\n\l 19 fundecl: FUNCTION IDENT '(' parlist ')' ':' . atomictype vardecllist\l"]
  70 -> 20 [style=solid label="UNIT_TYPE"]
  70 -> 21 [style=solid label="BOOL_TYPE"]
  70 -> 22 [style=solid label="INT_TYPE"]
  70 -> 81 [style=dashed label="atomictype"]
  71 [label="State 71\n\l 22 parlist: par ',' parlist .\l"]
  71 -> "71R22" [style=solid]
 "71R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 32 expr: IDENT '(' ')' .\l"]
  72 -> "72R32" [style=solid]
 "72R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 31 expr: IDENT '(' exprlist . ')'\l"]
  73 -> 82 [style=solid label="')'"]
  74 [label="State 74\n\l 25 exprlist: expr .\l 26         | expr . ',' exprlist\l 29 expr: expr . opb expr\l"]
  74 -> 83 [style=solid label="','"]
  74 -> 52 [style=solid label="OP_MINUS"]
  74 -> 53 [style=solid label="OPB_POW"]
  74 -> 54 [style=solid label="OPB_STAR"]
  74 -> 55 [style=solid label="OPB_DIVIDE"]
  74 -> 56 [style=solid label="OPB_AND"]
  74 -> 57 [style=solid label="OPB_PLUS"]
  74 -> 58 [style=solid label="OPB_OR"]
  74 -> 59 [style=solid label="OPB_XOR"]
  74 -> 60 [style=solid label="OPB_L_EQ"]
  74 -> 61 [style=solid label="OPB_L"]
  74 -> 62 [style=solid label="OPB_G_EQ"]
  74 -> 63 [style=solid label="OPB_G"]
  74 -> 64 [style=solid label="OPB_EQ"]
  74 -> 65 [style=solid label="OPB_DIFF"]
  74 -> 66 [style=dashed label="opb"]
  74 -> "74R25" [style=solid]
 "74R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 33 expr: IDENT '[' exprlist . ']'\l"]
  75 -> 84 [style=solid label="']'"]
  76 [label="State 76\n\l 28 expr: '(' expr ')' .\l"]
  76 -> "76R28" [style=solid]
 "76R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 13 arraytype: ARRAY '[' rangelist ']' OF . atomictype\l"]
  77 -> 20 [style=solid label="UNIT_TYPE"]
  77 -> 21 [style=solid label="BOOL_TYPE"]
  77 -> 22 [style=solid label="INT_TYPE"]
  77 -> 85 [style=dashed label="atomictype"]
  78 [label="State 78\n\l 14 rangelist: integer RANGELIST_SEPARATOR integer .\l 15          | integer RANGELIST_SEPARATOR integer . ',' rangelist\l"]
  78 -> 86 [style=solid label="','"]
  78 -> "78R14" [style=solid]
 "78R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 29 expr: expr . opb expr\l 29     | expr opb expr .\l"]
  79 -> 52 [style=solid label="OP_MINUS"]
  79 -> 53 [style=solid label="OPB_POW"]
  79 -> 54 [style=solid label="OPB_STAR"]
  79 -> 55 [style=solid label="OPB_DIVIDE"]
  79 -> 56 [style=solid label="OPB_AND"]
  79 -> 57 [style=solid label="OPB_PLUS"]
  79 -> 58 [style=solid label="OPB_OR"]
  79 -> 59 [style=solid label="OPB_XOR"]
  79 -> 60 [style=solid label="OPB_L_EQ"]
  79 -> 61 [style=solid label="OPB_L"]
  79 -> 62 [style=solid label="OPB_G_EQ"]
  79 -> 63 [style=solid label="OPB_G"]
  79 -> 64 [style=solid label="OPB_EQ"]
  79 -> 65 [style=solid label="OPB_DIFF"]
  79 -> 66 [style=dashed label="opb"]
  79 -> "79R29" [style=solid]
 "79R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 24 par: REF IDENT ':' typename .\l"]
  80 -> "80R24" [style=solid]
 "80R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 19 fundecl: FUNCTION IDENT '(' parlist ')' ':' atomictype . vardecllist\l"]
  81 -> 5 [style=solid label="VAR"]
  81 -> 87 [style=dashed label="vardecllist"]
  81 -> 7 [style=dashed label="varsdecl"]
  81 -> "81R2" [style=solid]
 "81R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 31 expr: IDENT '(' exprlist ')' .\l"]
  82 -> "82R31" [style=solid]
 "82R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 26 exprlist: expr ',' . exprlist\l"]
  83 -> 34 [style=solid label="CTE"]
  83 -> 35 [style=solid label="IDENT"]
  83 -> 36 [style=solid label="'('"]
  83 -> 37 [style=solid label="OP_MINUS"]
  83 -> 38 [style=solid label="OPU_NOT"]
  83 -> 88 [style=dashed label="exprlist"]
  83 -> 74 [style=dashed label="expr"]
  83 -> 42 [style=dashed label="opu"]
  84 [label="State 84\n\l 33 expr: IDENT '[' exprlist ']' .\l"]
  84 -> "84R33" [style=solid]
 "84R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 13 arraytype: ARRAY '[' rangelist ']' OF atomictype .\l"]
  85 -> "85R13" [style=solid]
 "85R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 15 rangelist: integer RANGELIST_SEPARATOR integer ',' . rangelist\l"]
  86 -> 34 [style=solid label="CTE"]
  86 -> 35 [style=solid label="IDENT"]
  86 -> 36 [style=solid label="'('"]
  86 -> 37 [style=solid label="OP_MINUS"]
  86 -> 38 [style=solid label="OPU_NOT"]
  86 -> 89 [style=dashed label="rangelist"]
  86 -> 40 [style=dashed label="integer"]
  86 -> 41 [style=dashed label="expr"]
  86 -> 42 [style=dashed label="opu"]
  87 [label="State 87\n\l 19 fundecl: FUNCTION IDENT '(' parlist ')' ':' atomictype vardecllist .\l"]
  87 -> "87R19" [style=solid]
 "87R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 26 exprlist: expr ',' exprlist .\l"]
  88 -> "88R26" [style=solid]
 "88R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 15 rangelist: integer RANGELIST_SEPARATOR integer ',' rangelist .\l"]
  89 -> "89R15" [style=solid]
 "89R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
}
