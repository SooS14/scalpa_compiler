Nonterminals useless in grammar

    program
    vardecllist
    varsdecl
    identlist
    typename
    atomictype
    arraytype
    rangelist
    integer


Terminals unused in grammar

    ':'
    ASSIGNMENT
    VAR
    UNIT_TYPE
    BOOL_TYPE
    INT_TYPE
    OF
    ARRAY
    RANGELIST_SEPARATOR
    PROGRAM


Rules useless in grammar

   29 program: PROGRAM IDENT vardecllist

   30 vardecllist: %empty
   31            | varsdecl
   32            | varsdecl ';' vardecllist

   33 varsdecl: VAR identlist ':' typename

   34 identlist: IDENT
   35          | IDENT ',' identlist

   36 typename: atomictype
   37         | arraytype

   38 atomictype: UNIT_TYPE
   39           | BOOL_TYPE
   40           | INT_TYPE

   41 arraytype: ARRAY '[' rangelist ']' OF atomictype

   42 rangelist: integer RANGELIST_SEPARATOR integer
   43          | integer RANGELIST_SEPARATOR integer ',' rangelist

   44 integer: expr


Grammar

    0 $accept: test1 $end

    1 test1: %empty
    2      | test1 expr ';'

    3 exprlist: expr
    4         | expr ',' exprlist

    5 expr: CTE
    6     | '(' expr ')'
    7     | expr opb expr
    8     | opu expr
    9     | IDENT '(' exprlist ')'
   10     | IDENT '(' ')'
   11     | IDENT '[' exprlist ']'
   12     | IDENT

   13 opb: OPB_PLUS
   14    | OP_MINUS
   15    | OPB_STAR
   16    | OPB_DIVIDE
   17    | OPB_POW
   18    | OPB_L
   19    | OPB_L_EQ
   20    | OPB_G
   21    | OPB_G_EQ
   22    | OPB_EQ
   23    | OPB_DIFF
   24    | OPB_AND
   25    | OPB_OR
   26    | OPB_XOR

   27 opu: OP_MINUS
   28    | OPU_NOT


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 9 10
    ')' (41) 6 9 10
    ',' (44) 4
    ':' (58)
    ';' (59) 2
    '[' (91) 11
    ']' (93) 11
    error (256)
    CTE <cste> (258) 5
    IDENT <strval> (259) 9 10 11 12
    ASSIGNMENT (260)
    VAR (261)
    UNIT_TYPE (262)
    BOOL_TYPE (263)
    INT_TYPE (264)
    OF (265)
    ARRAY (266)
    RANGELIST_SEPARATOR (267)
    PROGRAM (268)
    OPB (269)
    OPU (270)
    OP_MINUS (271) 14 27
    OPU_NOT (272) 28
    OPB_POW (273) 17
    OPB_STAR (274) 15
    OPB_DIVIDE (275) 16
    OPB_AND (276) 24
    OPB_PLUS (277) 13
    OPB_OR (278) 25
    OPB_XOR (279) 26
    OPB_L_EQ (280) 19
    OPB_L (281) 18
    OPB_G_EQ (282) 21
    OPB_G (283) 20
    OPB_EQ (284) 22
    OPB_DIFF (285) 23


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    test1 (39)
        on left: 1 2
        on right: 0 2
    exprlist (40)
        on left: 3 4
        on right: 4 9 11
    expr <cste> (41)
        on left: 5 6 7 8 9 10 11 12
        on right: 2 3 4 6 7 8
    opb <ival> (42)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 7
    opu <ival> (43)
        on left: 27 28
        on right: 8


State 0

    0 $accept: . test1 $end

    $default  reduce using rule 1 (test1)

    test1  go to state 1


State 1

    0 $accept: test1 . $end
    2 test1: test1 . expr ';'

    $end      shift, and go to state 2
    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    expr  go to state 8
    opu   go to state 9


State 2

    0 $accept: test1 $end .

    $default  accept


State 3

    5 expr: CTE .

    $default  reduce using rule 5 (expr)


State 4

    9 expr: IDENT . '(' exprlist ')'
   10     | IDENT . '(' ')'
   11     | IDENT . '[' exprlist ']'
   12     | IDENT .

    '('  shift, and go to state 10
    '['  shift, and go to state 11

    $default  reduce using rule 12 (expr)


State 5

    6 expr: '(' . expr ')'

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    expr  go to state 12
    opu   go to state 9


State 6

   27 opu: OP_MINUS .

    $default  reduce using rule 27 (opu)


State 7

   28 opu: OPU_NOT .

    $default  reduce using rule 28 (opu)


State 8

    2 test1: test1 expr . ';'
    7 expr: expr . opb expr

    ';'         shift, and go to state 13
    OP_MINUS    shift, and go to state 14
    OPB_POW     shift, and go to state 15
    OPB_STAR    shift, and go to state 16
    OPB_DIVIDE  shift, and go to state 17
    OPB_AND     shift, and go to state 18
    OPB_PLUS    shift, and go to state 19
    OPB_OR      shift, and go to state 20
    OPB_XOR     shift, and go to state 21
    OPB_L_EQ    shift, and go to state 22
    OPB_L       shift, and go to state 23
    OPB_G_EQ    shift, and go to state 24
    OPB_G       shift, and go to state 25
    OPB_EQ      shift, and go to state 26
    OPB_DIFF    shift, and go to state 27

    opb  go to state 28


State 9

    8 expr: opu . expr

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    expr  go to state 29
    opu   go to state 9


State 10

    9 expr: IDENT '(' . exprlist ')'
   10     | IDENT '(' . ')'

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    ')'       shift, and go to state 30
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    exprlist  go to state 31
    expr      go to state 32
    opu       go to state 9


State 11

   11 expr: IDENT '[' . exprlist ']'

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    exprlist  go to state 33
    expr      go to state 32
    opu       go to state 9


State 12

    6 expr: '(' expr . ')'
    7     | expr . opb expr

    ')'         shift, and go to state 34
    OP_MINUS    shift, and go to state 14
    OPB_POW     shift, and go to state 15
    OPB_STAR    shift, and go to state 16
    OPB_DIVIDE  shift, and go to state 17
    OPB_AND     shift, and go to state 18
    OPB_PLUS    shift, and go to state 19
    OPB_OR      shift, and go to state 20
    OPB_XOR     shift, and go to state 21
    OPB_L_EQ    shift, and go to state 22
    OPB_L       shift, and go to state 23
    OPB_G_EQ    shift, and go to state 24
    OPB_G       shift, and go to state 25
    OPB_EQ      shift, and go to state 26
    OPB_DIFF    shift, and go to state 27

    opb  go to state 28


State 13

    2 test1: test1 expr ';' .

    $default  reduce using rule 2 (test1)


State 14

   14 opb: OP_MINUS .

    $default  reduce using rule 14 (opb)


State 15

   17 opb: OPB_POW .

    $default  reduce using rule 17 (opb)


State 16

   15 opb: OPB_STAR .

    $default  reduce using rule 15 (opb)


State 17

   16 opb: OPB_DIVIDE .

    $default  reduce using rule 16 (opb)


State 18

   24 opb: OPB_AND .

    $default  reduce using rule 24 (opb)


State 19

   13 opb: OPB_PLUS .

    $default  reduce using rule 13 (opb)


State 20

   25 opb: OPB_OR .

    $default  reduce using rule 25 (opb)


State 21

   26 opb: OPB_XOR .

    $default  reduce using rule 26 (opb)


State 22

   19 opb: OPB_L_EQ .

    $default  reduce using rule 19 (opb)


State 23

   18 opb: OPB_L .

    $default  reduce using rule 18 (opb)


State 24

   21 opb: OPB_G_EQ .

    $default  reduce using rule 21 (opb)


State 25

   20 opb: OPB_G .

    $default  reduce using rule 20 (opb)


State 26

   22 opb: OPB_EQ .

    $default  reduce using rule 22 (opb)


State 27

   23 opb: OPB_DIFF .

    $default  reduce using rule 23 (opb)


State 28

    7 expr: expr opb . expr

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    expr  go to state 35
    opu   go to state 9


State 29

    7 expr: expr . opb expr
    8     | opu expr .

    OP_MINUS    shift, and go to state 14
    OPB_POW     shift, and go to state 15
    OPB_STAR    shift, and go to state 16
    OPB_DIVIDE  shift, and go to state 17
    OPB_AND     shift, and go to state 18
    OPB_PLUS    shift, and go to state 19
    OPB_OR      shift, and go to state 20
    OPB_XOR     shift, and go to state 21
    OPB_L_EQ    shift, and go to state 22
    OPB_L       shift, and go to state 23
    OPB_G_EQ    shift, and go to state 24
    OPB_G       shift, and go to state 25
    OPB_EQ      shift, and go to state 26
    OPB_DIFF    shift, and go to state 27

    $default  reduce using rule 8 (expr)

    opb  go to state 28


State 30

   10 expr: IDENT '(' ')' .

    $default  reduce using rule 10 (expr)


State 31

    9 expr: IDENT '(' exprlist . ')'

    ')'  shift, and go to state 36


State 32

    3 exprlist: expr .
    4         | expr . ',' exprlist
    7 expr: expr . opb expr

    ','         shift, and go to state 37
    OP_MINUS    shift, and go to state 14
    OPB_POW     shift, and go to state 15
    OPB_STAR    shift, and go to state 16
    OPB_DIVIDE  shift, and go to state 17
    OPB_AND     shift, and go to state 18
    OPB_PLUS    shift, and go to state 19
    OPB_OR      shift, and go to state 20
    OPB_XOR     shift, and go to state 21
    OPB_L_EQ    shift, and go to state 22
    OPB_L       shift, and go to state 23
    OPB_G_EQ    shift, and go to state 24
    OPB_G       shift, and go to state 25
    OPB_EQ      shift, and go to state 26
    OPB_DIFF    shift, and go to state 27

    $default  reduce using rule 3 (exprlist)

    opb  go to state 28


State 33

   11 expr: IDENT '[' exprlist . ']'

    ']'  shift, and go to state 38


State 34

    6 expr: '(' expr ')' .

    $default  reduce using rule 6 (expr)


State 35

    7 expr: expr . opb expr
    7     | expr opb expr .

    OP_MINUS    shift, and go to state 14
    OPB_POW     shift, and go to state 15
    OPB_STAR    shift, and go to state 16
    OPB_DIVIDE  shift, and go to state 17
    OPB_AND     shift, and go to state 18
    OPB_PLUS    shift, and go to state 19
    OPB_OR      shift, and go to state 20
    OPB_XOR     shift, and go to state 21
    OPB_L_EQ    shift, and go to state 22
    OPB_L       shift, and go to state 23
    OPB_G_EQ    shift, and go to state 24
    OPB_G       shift, and go to state 25
    OPB_EQ      shift, and go to state 26
    OPB_DIFF    shift, and go to state 27

    $default  reduce using rule 7 (expr)

    opb  go to state 28


State 36

    9 expr: IDENT '(' exprlist ')' .

    $default  reduce using rule 9 (expr)


State 37

    4 exprlist: expr ',' . exprlist

    CTE       shift, and go to state 3
    IDENT     shift, and go to state 4
    '('       shift, and go to state 5
    OP_MINUS  shift, and go to state 6
    OPU_NOT   shift, and go to state 7

    exprlist  go to state 39
    expr      go to state 32
    opu       go to state 9


State 38

   11 expr: IDENT '[' exprlist ']' .

    $default  reduce using rule 11 (expr)


State 39

    4 exprlist: expr ',' exprlist .

    $default  reduce using rule 4 (exprlist)
